val lifecycleState by lifecycleOwner.lifecycle.currentStateFlow.collectAsState()
val lifecycleOwner = LocalLifecycleOwner.current

LaunchedEffect(lifecycleState) {
        when(lifecycleState) {
            Lifecycle.State.DESTROYED -> {}
            Lifecycle.State.INITIALIZED -> {}
            Lifecycle.State.CREATED -> {
                if(inputTaskName.isEmpty()) return@LaunchedEffect
                //do save all data
                //add task
                isUpdateTask?.let { selected ->
                    val modified = selected.copy(
                        text = inputTaskName
                    )

                    vm.proceedEvents(AddTaskUIEvent.UpdateTask(taskName = modified))
                } ?: run{
                    vm.proceedEvents(
                        AddTaskUIEvent.AddNewTask(
                            taskName = inputTaskName
                        )
                    )
                }
            }
            Lifecycle.State.STARTED -> {}
            Lifecycle.State.RESUMED -> {}
        }
    }
